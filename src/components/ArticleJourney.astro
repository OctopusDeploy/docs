---
import { Accelerator } from 'astro-accelerator-utils';
import type { Frontmatter } from 'astro-accelerator-utils/types/Frontmatter';
import type { NavPage } from 'astro-accelerator-utils/types/NavPage';
import { SITE } from '@config';
import { Lang } from '@util/Languages';

const accelerator = new Accelerator(SITE);
const stats = new accelerator.statistics('components/ArticleJourney.astro');
stats.start();

// Properties
type Props = {
  lang: string;
  frontmatter: Frontmatter;
  headings: { depth: number; slug: string; text: string }[];
};
const { lang, frontmatter, headings } = Astro.props satisfies Props;

// Language
const _ = Lang(lang);

// Logic
const articles: NavPage[] = [];

function flatten(pageTree: NavPage[]) {
  pageTree.sort((a, b) => a.order - b.order);
  pageTree.forEach((page) => {
    if (page.children.length == 0) {
      articles.push(page);
    } else {
      flatten(page.children);
    }
  });
}

const currentUrl = new URL(Astro.request.url);
const pages = accelerator.navigation.autoMenu(SITE.subfolder);
accelerator.navigation.setCurrentPage(pages, currentUrl);
flatten(pages);

const current = articles.findIndex((p) => p.ariaCurrent);

const previous = articles[current - 1] || null;
const next = articles[current + 1] || null;

const speculationList: NavPage[] = [];

if (previous) {
  speculationList.push(previous);
}

if (next) {
  speculationList.push(next);
}

function getSpeculationRules(articles: NavPage[]) {
  const urls = JSON.stringify(articles.map((a) => a.url));
  return `<script type="speculationrules">
{
  "prerender": [
    {
      "source": "list",
      "urls": ${urls}
    }
  ]
}
</script>`;
}

const showPrevious = true;
stats.stop();
---

<nav class="article-journey">
  {
    showPrevious && previous && (
      <a
        href={previous.url}
        rel={previous.rel}
        class="article-journey__button article-journey__button--previous"
        aria-label={`Previous article: ${previous.title}`}
      >
        <div class="article-journey__icon-wrapper">
          <svg
            class="article-journey__icon"
            width="13"
            height="22"
            viewBox="0 0 13 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            aria-hidden="true"
          >
            <path
              d="M2 20L11 11L2 2"
              stroke="#0D80D8"
              stroke-width="3.6"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
          </svg>
        </div>
        <div class="article-journey__content">
          <span class="article-journey__label">Previous article</span>
          <span class="article-journey__title">{previous.title}</span>
        </div>
      </a>
    )
  }
  {
    next && (
      <a
        href={next.url}
        rel={next.rel}
        class="article-journey__button article-journey__button--next"
        aria-label={`Next article: ${next.title}`}
      >
        <div class="article-journey__content">
          <span class="article-journey__label">Next article</span>
          <span class="article-journey__title">{next.title}</span>
        </div>
        <div class="article-journey__icon-wrapper">
          <svg
            class="article-journey__icon"
            width="13"
            height="22"
            viewBox="0 0 13 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            aria-hidden="true"
          >
            <path
              d="M2 20L11 11L2 2"
              stroke="#0D80D8"
              stroke-width="3.6"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
          </svg>
        </div>
      </a>
    )
  }
</nav>
<!-- Chromium fix. See: https://www.stevefenton.co.uk/blog/2022/12/mobile-position-sticky-issue/ -->
<div style="position: fixed;"></div>
<Fragment set:html={getSpeculationRules(speculationList)} />
