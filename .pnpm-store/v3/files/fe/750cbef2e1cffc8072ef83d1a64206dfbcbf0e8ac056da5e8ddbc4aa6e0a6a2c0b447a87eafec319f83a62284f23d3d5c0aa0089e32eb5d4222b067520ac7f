{"version":3,"file":"response.js","sourceRoot":"","sources":["../../src/response.ts"],"names":[],"mappings":"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","sourcesContent":["import { Response, Status } from '@amplitude/types';\nimport { IncomingMessage } from 'http';\nimport { mapHttpCodeToStatus } from './status';\n\n/**\n * Collects the invalid event indices off a HTTP API v2 response\n * and returns them in increasing order.\n *\n * @param response A Response from sending an event payload\n * @returns An concatenated array of indices\n */\nexport const collectInvalidEventIndices = (response: Response): number[] => {\n  const invalidEventIndices = new Set<number>();\n  if (response.status === Status.Invalid && response.body !== undefined) {\n    const { eventsWithInvalidFields, eventsWithMissingFields } = response.body;\n    Object.keys(eventsWithInvalidFields).forEach((field: string) => {\n      const eventIndices = eventsWithInvalidFields[field] ?? [];\n      eventIndices.forEach((index: number) => {\n        invalidEventIndices.add(index);\n      });\n    });\n    Object.keys(eventsWithMissingFields).forEach((field: string) => {\n      const eventIndices = eventsWithMissingFields[field] ?? [];\n      eventIndices.forEach((index: number) => {\n        invalidEventIndices.add(index);\n      });\n    });\n  }\n\n  return Array.from(invalidEventIndices).sort((numberOne, numberTwo) => numberOne - numberTwo);\n};\n\n/**\n * Converts a http.IncomingMessage object into a Response object.\n *\n * @param httpRes The http response from the HTTP API.\n * @returns Response a nicely typed and cased response object.\n */\nexport const mapHttpMessageToResponse = (httpRes: IncomingMessage): Response => {\n  const statusCode = httpRes.statusCode === undefined ? 0 : httpRes.statusCode;\n  const status = mapHttpCodeToStatus(statusCode);\n\n  return {\n    status,\n    statusCode,\n  };\n};\n\n/**\n * Converts the response from the HTTP V2 API into a Response object.\n * Should be used only if we are pointed towards the v2 api.\n *\n * @param responseJSON The response body from the HTTP V2 API, as a JSON blob\n * @returns Response a nicely typed and cased response object.\n */\nexport const mapJSONToResponse = (responseJSON: any): Response | null => {\n  if (typeof responseJSON !== 'object') {\n    return null;\n  }\n\n  const status = mapHttpCodeToStatus(responseJSON.code);\n  const statusCode = responseJSON.code;\n\n  switch (status) {\n    case Status.Success:\n      return {\n        status,\n        statusCode,\n        body: {\n          eventsIngested: responseJSON.events_ingested,\n          payloadSizeBytes: responseJSON.payload_size_bytes,\n          serverUploadTime: responseJSON.server_upload_time,\n        },\n      };\n\n    case Status.Invalid:\n      return {\n        status,\n        statusCode,\n        body: {\n          error: responseJSON.error ?? '',\n          missingField: responseJSON.missing_field ?? null,\n          eventsWithInvalidFields: responseJSON.events_with_invalid_fields ?? {},\n          eventsWithMissingFields: responseJSON.events_with_missing_fields ?? {},\n        },\n      };\n    case Status.PayloadTooLarge:\n      return {\n        status,\n        statusCode,\n        body: {\n          error: responseJSON.error ?? '',\n        },\n      };\n    case Status.RateLimit:\n      return {\n        status,\n        statusCode,\n        body: {\n          error: responseJSON.error ?? '',\n          epsThreshold: responseJSON.eps_threshold,\n          throttledDevices: responseJSON.throttled_devices ?? {},\n          throttledUsers: responseJSON.throttled_users ?? {},\n          exceededDailyQuotaDevices: responseJSON.exceeded_daily_quota_devices ?? {},\n          exceededDailyQuotaUsers: responseJSON.exceeded_daily_quota_users ?? {},\n          throttledEvents: responseJSON.throttled_events ?? [],\n        },\n      };\n    case Status.Timeout:\n    default:\n      return {\n        status,\n        statusCode,\n      };\n  }\n};\n"]}