{"version":3,"file":"filesize.min.js","sources":["../src/filesize.js"],"sourcesContent":["const strings = {\r\n\t\tsymbol: {\r\n\t\t\tiec: {\r\n\t\t\t\tbits: [\"bit\", \"Kibit\", \"Mibit\", \"Gibit\", \"Tibit\", \"Pibit\", \"Eibit\", \"Zibit\", \"Yibit\"],\r\n\t\t\t\tbytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\r\n\t\t\t},\r\n\t\t\tjedec: {\r\n\t\t\t\tbits: [\"bit\", \"Kbit\", \"Mbit\", \"Gbit\", \"Tbit\", \"Pbit\", \"Ebit\", \"Zbit\", \"Ybit\"],\r\n\t\t\t\tbytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\r\n\t\t\t}\r\n\t\t},\r\n\t\tfullform: {\r\n\t\t\tiec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\r\n\t\t\tjedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\r\n\t\t}\r\n\t},\r\n\troundingFuncs = {\r\n\t\tceil: Math.ceil,\r\n\t\tfloor: Math.floor,\r\n\t\tround: Math.round\r\n\t};\r\n\r\n/**\r\n * filesize\r\n *\r\n * @method filesize\r\n * @param  {Mixed}   arg        String, Int or Float to transform\r\n * @param  {Object}  descriptor [Optional] Flags\r\n * @return {String}             Readable file size String\r\n */\r\nfunction filesize (arg, {bits = false, pad = false, base = 10, round = 2, locale = \"\", localeOptions = {}, separator = \"\", spacer = \" \", symbols = {}, standard = \"iec\", output = \"string\", fullform = false, fullforms = [], exponent = -1, roundingMethod = \"round\", precision = 0} = {}) {\r\n\tlet e = exponent,\r\n\t\tnum = Number(arg),\r\n\t\tresult = [],\r\n\t\tval = 0,\r\n\t\tu = \"\";\r\n\tconst ceil = base === 10 ? 1000 : 1024,\r\n\t\tfull = fullform === true,\r\n\t\tneg = num < 0,\r\n\t\troundingFunc = roundingFuncs[roundingMethod];\r\n\r\n\tif (isNaN(arg)) {\r\n\t\tthrow new TypeError(\"Invalid number\");\r\n\t}\r\n\r\n\t// Flipping a negative number to determine the size\r\n\tif (neg) {\r\n\t\tnum = -num;\r\n\t}\r\n\r\n\t// Determining the exponent\r\n\tif (e === -1 || isNaN(e)) {\r\n\t\te = Math.floor(Math.log(num) / Math.log(ceil));\r\n\r\n\t\tif (e < 0) {\r\n\t\t\te = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t// Exceeding supported length, time to reduce & multiply\r\n\tif (e > 8) {\r\n\t\tif (precision > 0) {\r\n\t\t\tprecision += 8 - e;\r\n\t\t}\r\n\r\n\t\te = 8;\r\n\t}\r\n\r\n\tif (output === \"exponent\") {\r\n\t\treturn e;\r\n\t}\r\n\r\n\t// Zero is now a special case because bytes divide by 1\r\n\tif (num === 0) {\r\n\t\tresult[0] = 0;\r\n\t\tu = result[1] = strings.symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\t} else {\r\n\t\tval = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\r\n\r\n\t\tif (bits) {\r\n\t\t\tval = val * 8;\r\n\r\n\t\t\tif (val >= ceil && e < 8) {\r\n\t\t\t\tval = val / ceil;\r\n\t\t\t\te++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst p = Math.pow(10, e > 0 ? round : 0);\r\n\t\tresult[0] = roundingFunc(val * p) / p;\r\n\r\n\t\tif (result[0] === ceil && e < 8 && exponent === -1) {\r\n\t\t\tresult[0] = 1;\r\n\t\t\te++;\r\n\t\t}\r\n\r\n\t\tu = result[1] = strings.symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\t}\r\n\r\n\t// Decorating a 'diff'\r\n\tif (neg) {\r\n\t\tresult[0] = -result[0];\r\n\t}\r\n\r\n\t// Setting optional precision\r\n\tif (precision > 0) {\r\n\t\tresult[0] = result[0].toPrecision(precision);\r\n\t}\r\n\r\n\t// Applying custom symbol\r\n\tresult[1] = symbols[result[1]] || result[1];\r\n\r\n\tif (locale === true) {\r\n\t\tresult[0] = result[0].toLocaleString();\r\n\t} else if (locale.length > 0) {\r\n\t\tresult[0] = result[0].toLocaleString(locale, localeOptions);\r\n\t} else if (separator.length > 0) {\r\n\t\tresult[0] = result[0].toString().replace(\".\", separator);\r\n\t}\r\n\r\n\tif (pad && Number.isInteger(result[0]) === false && round > 0) {\r\n\t\tconst x = separator || \".\",\r\n\t\t\ttmp = result[0].toString().split(x),\r\n\t\t\ts = tmp[1] || \"\",\r\n\t\t\tl = s.length,\r\n\t\t\tn = round - l;\r\n\r\n\t\tresult[0] = `${tmp[0]}${x}${s.padEnd(l + n, \"0\")}`;\r\n\t}\r\n\r\n\tif (full) {\r\n\t\tresult[1] = fullforms[e] ? fullforms[e] : strings.fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\r\n\t}\r\n\r\n\t// Returning Array, Object, or String (default)\r\n\treturn output === \"array\" ? result : output === \"object\" ? {value: result[0], symbol: result[1], exponent: e, unit: u} : result.join(spacer);\r\n}\r\n\r\n// Partial application for functional programming\r\nfilesize.partial = opt => arg => filesize(arg, opt);\r\n\r\nexport default filesize;\r\n"],"names":["strings","symbol","iec","bits","bytes","jedec","fullform","roundingFuncs","ceil","Math","floor","round","filesize","arg","_ref","arguments","length","undefined","_ref$bits","_ref$pad","pad","_ref$base","base","_ref$round","_ref$locale","locale","_ref$localeOptions","localeOptions","_ref$separator","separator","_ref$spacer","spacer","_ref$symbols","symbols","_ref$standard","standard","_ref$output","output","_ref$fullform","_ref$fullforms","fullforms","_ref$exponent","exponent","_ref$roundingMethod","roundingMethod","_ref$precision","precision","e","num","Number","result","val","u","full","neg","roundingFunc","isNaN","TypeError","log","pow","p","toPrecision","toLocaleString","toString","replace","isInteger","x","tmp","split","s","l","n","concat","padEnd","value","unit","join","partial","opt"],"mappings":"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"}