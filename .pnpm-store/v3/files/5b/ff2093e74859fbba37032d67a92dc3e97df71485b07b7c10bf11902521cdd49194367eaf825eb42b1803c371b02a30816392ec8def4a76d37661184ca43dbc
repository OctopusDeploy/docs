{"version":3,"file":"filesize.es6.min.js","sources":["../src/filesize.js"],"sourcesContent":["const strings = {\r\n\t\tsymbol: {\r\n\t\t\tiec: {\r\n\t\t\t\tbits: [\"bit\", \"Kibit\", \"Mibit\", \"Gibit\", \"Tibit\", \"Pibit\", \"Eibit\", \"Zibit\", \"Yibit\"],\r\n\t\t\t\tbytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\r\n\t\t\t},\r\n\t\t\tjedec: {\r\n\t\t\t\tbits: [\"bit\", \"Kbit\", \"Mbit\", \"Gbit\", \"Tbit\", \"Pbit\", \"Ebit\", \"Zbit\", \"Ybit\"],\r\n\t\t\t\tbytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\r\n\t\t\t}\r\n\t\t},\r\n\t\tfullform: {\r\n\t\t\tiec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\r\n\t\t\tjedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\r\n\t\t}\r\n\t},\r\n\troundingFuncs = {\r\n\t\tceil: Math.ceil,\r\n\t\tfloor: Math.floor,\r\n\t\tround: Math.round\r\n\t};\r\n\r\n/**\r\n * filesize\r\n *\r\n * @method filesize\r\n * @param  {Mixed}   arg        String, Int or Float to transform\r\n * @param  {Object}  descriptor [Optional] Flags\r\n * @return {String}             Readable file size String\r\n */\r\nfunction filesize (arg, {bits = false, pad = false, base = 10, round = 2, locale = \"\", localeOptions = {}, separator = \"\", spacer = \" \", symbols = {}, standard = \"iec\", output = \"string\", fullform = false, fullforms = [], exponent = -1, roundingMethod = \"round\", precision = 0} = {}) {\r\n\tlet e = exponent,\r\n\t\tnum = Number(arg),\r\n\t\tresult = [],\r\n\t\tval = 0,\r\n\t\tu = \"\";\r\n\tconst ceil = base === 10 ? 1000 : 1024,\r\n\t\tfull = fullform === true,\r\n\t\tneg = num < 0,\r\n\t\troundingFunc = roundingFuncs[roundingMethod];\r\n\r\n\tif (isNaN(arg)) {\r\n\t\tthrow new TypeError(\"Invalid number\");\r\n\t}\r\n\r\n\t// Flipping a negative number to determine the size\r\n\tif (neg) {\r\n\t\tnum = -num;\r\n\t}\r\n\r\n\t// Determining the exponent\r\n\tif (e === -1 || isNaN(e)) {\r\n\t\te = Math.floor(Math.log(num) / Math.log(ceil));\r\n\r\n\t\tif (e < 0) {\r\n\t\t\te = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t// Exceeding supported length, time to reduce & multiply\r\n\tif (e > 8) {\r\n\t\tif (precision > 0) {\r\n\t\t\tprecision += 8 - e;\r\n\t\t}\r\n\r\n\t\te = 8;\r\n\t}\r\n\r\n\tif (output === \"exponent\") {\r\n\t\treturn e;\r\n\t}\r\n\r\n\t// Zero is now a special case because bytes divide by 1\r\n\tif (num === 0) {\r\n\t\tresult[0] = 0;\r\n\t\tu = result[1] = strings.symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\t} else {\r\n\t\tval = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\r\n\r\n\t\tif (bits) {\r\n\t\t\tval = val * 8;\r\n\r\n\t\t\tif (val >= ceil && e < 8) {\r\n\t\t\t\tval = val / ceil;\r\n\t\t\t\te++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst p = Math.pow(10, e > 0 ? round : 0);\r\n\t\tresult[0] = roundingFunc(val * p) / p;\r\n\r\n\t\tif (result[0] === ceil && e < 8 && exponent === -1) {\r\n\t\t\tresult[0] = 1;\r\n\t\t\te++;\r\n\t\t}\r\n\r\n\t\tu = result[1] = strings.symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\t}\r\n\r\n\t// Decorating a 'diff'\r\n\tif (neg) {\r\n\t\tresult[0] = -result[0];\r\n\t}\r\n\r\n\t// Setting optional precision\r\n\tif (precision > 0) {\r\n\t\tresult[0] = result[0].toPrecision(precision);\r\n\t}\r\n\r\n\t// Applying custom symbol\r\n\tresult[1] = symbols[result[1]] || result[1];\r\n\r\n\tif (locale === true) {\r\n\t\tresult[0] = result[0].toLocaleString();\r\n\t} else if (locale.length > 0) {\r\n\t\tresult[0] = result[0].toLocaleString(locale, localeOptions);\r\n\t} else if (separator.length > 0) {\r\n\t\tresult[0] = result[0].toString().replace(\".\", separator);\r\n\t}\r\n\r\n\tif (pad && Number.isInteger(result[0]) === false && round > 0) {\r\n\t\tconst x = separator || \".\",\r\n\t\t\ttmp = result[0].toString().split(x),\r\n\t\t\ts = tmp[1] || \"\",\r\n\t\t\tl = s.length,\r\n\t\t\tn = round - l;\r\n\r\n\t\tresult[0] = `${tmp[0]}${x}${s.padEnd(l + n, \"0\")}`;\r\n\t}\r\n\r\n\tif (full) {\r\n\t\tresult[1] = fullforms[e] ? fullforms[e] : strings.fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\r\n\t}\r\n\r\n\t// Returning Array, Object, or String (default)\r\n\treturn output === \"array\" ? result : output === \"object\" ? {value: result[0], symbol: result[1], exponent: e, unit: u} : result.join(spacer);\r\n}\r\n\r\n// Partial application for functional programming\r\nfilesize.partial = opt => arg => filesize(arg, opt);\r\n\r\nexport default filesize;\r\n"],"names":["strings","symbol","iec","bits","bytes","jedec","fullform","roundingFuncs","ceil","Math","floor","round","filesize","arg","pad","base","locale","localeOptions","separator","spacer","symbols","standard","output","fullforms","exponent","roundingMethod","precision","e","num","Number","result","val","u","full","neg","roundingFunc","isNaN","TypeError","log","pow","p","toPrecision","toLocaleString","length","toString","replace","isInteger","x","tmp","split","s","l","n","padEnd","value","unit","join","partial","opt"],"mappings":";;;;yOAAA,MAAMA,EAAU,CACdC,OAAQ,CACPC,IAAK,CACJC,KAAM,CAAC,MAAO,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAC7EC,MAAO,CAAC,IAAK,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAE/DC,MAAO,CACNF,KAAM,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACtEC,MAAO,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAGzDE,SAAU,CACTJ,IAAK,CAAC,GAAI,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAClEG,MAAO,CAAC,GAAI,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,QAAS,WAGtEE,EAAgB,CACfC,KAAMC,KAAKD,KACXE,MAAOD,KAAKC,MACZC,MAAOF,KAAKE,OAWd,SAASC,EAAUC,GAAKV,KAACA,GAAO,EAAKW,IAAEA,GAAM,EAAKC,KAAEA,EAAO,GAAEJ,MAAEA,EAAQ,EAACK,OAAEA,EAAS,GAAEC,cAAEA,EAAgB,GAAEC,UAAEA,EAAY,GAAEC,OAAEA,EAAS,IAAGC,QAAEA,EAAU,GAAEC,SAAEA,EAAW,MAAKC,OAAEA,EAAS,SAAQhB,SAAEA,GAAW,EAAKiB,UAAEA,EAAY,GAAEC,SAAEA,GAAW,EAAEC,eAAEA,EAAiB,QAAOC,UAAEA,EAAY,GAAK,IACvR,IAAIC,EAAIH,EACPI,EAAMC,OAAOhB,GACbiB,EAAS,GACTC,EAAM,EACNC,EAAI,GACL,MAAMxB,EAAgB,KAATO,EAAc,IAAO,KACjCkB,GAAoB,IAAb3B,EACP4B,EAAMN,EAAM,EACZO,EAAe5B,EAAckB,GAE9B,GAAIW,MAAMvB,GACT,MAAM,IAAIwB,UAAU,kBA0BrB,GAtBIH,IACHN,GAAOA,KAIG,IAAPD,GAAYS,MAAMT,MACrBA,EAAIlB,KAAKC,MAAMD,KAAK6B,IAAIV,GAAOnB,KAAK6B,IAAI9B,IAEpCmB,EAAI,IACPA,EAAI,IAKFA,EAAI,IACHD,EAAY,IACfA,GAAa,EAAIC,GAGlBA,EAAI,GAGU,aAAXL,EACH,OAAOK,EAIR,GAAY,IAARC,EACHE,EAAO,GAAK,EACZE,EAAIF,EAAO,GAAK9B,EAAQC,OAAOoB,GAAUlB,EAAO,OAAS,SAASwB,OAC5D,CACNI,EAAMH,GAAgB,IAATb,EAAaN,KAAK8B,IAAI,EAAO,GAAJZ,GAAUlB,KAAK8B,IAAI,IAAMZ,IAE3DxB,IACH4B,GAAY,EAERA,GAAOvB,GAAQmB,EAAI,IACtBI,GAAYvB,EACZmB,MAIF,MAAMa,EAAI/B,KAAK8B,IAAI,GAAIZ,EAAI,EAAIhB,EAAQ,GACvCmB,EAAO,GAAKK,EAAaJ,EAAMS,GAAKA,EAEhCV,EAAO,KAAOtB,GAAQmB,EAAI,IAAmB,IAAdH,IAClCM,EAAO,GAAK,EACZH,KAGDK,EAAIF,EAAO,GAAK9B,EAAQC,OAAOoB,GAAUlB,EAAO,OAAS,SAASwB,GAwBnE,GApBIO,IACHJ,EAAO,IAAMA,EAAO,IAIjBJ,EAAY,IACfI,EAAO,GAAKA,EAAO,GAAGW,YAAYf,IAInCI,EAAO,GAAKV,EAAQU,EAAO,KAAOA,EAAO,IAE1B,IAAXd,EACHc,EAAO,GAAKA,EAAO,GAAGY,iBACZ1B,EAAO2B,OAAS,EAC1Bb,EAAO,GAAKA,EAAO,GAAGY,eAAe1B,EAAQC,GACnCC,EAAUyB,OAAS,IAC7Bb,EAAO,GAAKA,EAAO,GAAGc,WAAWC,QAAQ,IAAK3B,IAG3CJ,IAAuC,IAAhCe,OAAOiB,UAAUhB,EAAO,KAAiBnB,EAAQ,EAAG,CAC9D,MAAMoC,EAAI7B,GAAa,IACtB8B,EAAMlB,EAAO,GAAGc,WAAWK,MAAMF,GACjCG,EAAIF,EAAI,IAAM,GACdG,EAAID,EAAEP,OACNS,EAAIzC,EAAQwC,EAEbrB,EAAO,GAAK,GAAGkB,EAAI,KAAKD,IAAIG,EAAEG,OAAOF,EAAIC,EAAG,OAQ7C,OALInB,IACHH,EAAO,GAAKP,EAAUI,GAAKJ,EAAUI,GAAK3B,EAAQM,SAASe,GAAUM,IAAMxB,EAAO,MAAQ,SAAyB,IAAd2B,EAAO,GAAW,GAAK,MAI3G,UAAXR,EAAqBQ,EAAoB,WAAXR,EAAsB,CAACgC,MAAOxB,EAAO,GAAI7B,OAAQ6B,EAAO,GAAIN,SAAUG,EAAG4B,KAAMvB,GAAKF,EAAO0B,KAAKrC,UAItIP,EAAS6C,QAAUC,GAAO7C,GAAOD,EAASC,EAAK6C"}