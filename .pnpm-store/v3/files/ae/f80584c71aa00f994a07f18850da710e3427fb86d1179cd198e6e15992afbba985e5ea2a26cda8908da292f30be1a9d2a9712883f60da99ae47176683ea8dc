{"version":3,"file":"client.js","sourceRoot":"","sources":["../../src/client.ts"],"names":[],"mappings":"","sourcesContent":["import { Event } from './event';\nimport { Options } from './options';\nimport { Response } from './response';\n\n/**\n * User-Facing Amplitude SDK Client.\n *\n * This interface contains all methods needed with the SDK once it has\n * been installed.\n *\n */\nexport interface Client<O extends Options = Options> {\n  /** Return the current options */\n  getOptions(): O;\n\n  /**\n   * Captures a manually created event and sends it to Amplitude.\n   *\n   * @param event The event to send to Amplitude.\n   */\n  logEvent(event: Event): Promise<Response>;\n\n  /**\n   * Flush and send all the events which haven't been sent.\n   */\n  flush(): Promise<Response>;\n}\n"]}